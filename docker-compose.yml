version: '3.9'

services:
  redis:
    container_name: redis
    env_file: .env
    image: redis:${REDIS_VERSION}
    ports:
     - ${REDIS_PORT_EXTERNAL}:6379
    command: redis-server --maxmemory ${REDIS_MAX_MEMORY} --maxmemory-policy ${REDIS_EVICTION_POLICY} --maxmemory-samples ${REDIS_MAX_SAMPLES}
    # redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - PASSWORD=${REDIS_PASSWORD}
    restart: always
    #volumes:
    #  - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-p", "7000", "ping"]
      interval: 10s
      timeout: 3s
      retries: 10
  # kafka:
  #   container_name: kafka
  #   image: bitnami/kafka:latest
  #   restart: on-failure
  #   ports:
  #     - 9092:9092
  #   environment:
  #     - KAFKA_CFG_BROKER_ID=1
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - KAFKA_CFG_NUM_PARTITIONS=3
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on:
  #     - zookeeper

  # zookeeper:
  #   container_name: zookeeper
  #   image: bitnami/zookeeper:latest
  #   ports:
  #     - 2181:2181
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui
  #   depends_on:
  #     - kafka
  #     - zookeeper
  #   ports:
  #     - "8081:8080"
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=Daniel_Cluster
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  rabbitmq:
    container_name: rabbit
    image: rabbitmq:3.11.10-management
    hostname: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      TZ: "America/Fortaleza"
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    ports:
      - ${RABBIT_PORT}:5672
      - ${RABBIT_PORT_HTTP}:15672
      - ${RABBIT_PORT_WS}:15675
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 10